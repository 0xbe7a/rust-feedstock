{% set year = "2023" %}
{% set month = "05" %}
{% set day = "17" %}
{% set version = "1.71.0" %}

package:
  name: rust-split
  version: {{ version }}.dev{{ year }}{{ month }}{{ day }}


source:
  - 
    url: https://static.rust-lang.org/dist/{{ year }}-{{ month }}-{{ day }}/rust-nightly-x86_64-unknown-linux-gnu.tar.gz  # [linux and x86_64]
    url: https://static.rust-lang.org/dist/{{ year }}-{{ month }}-{{ day }}/rust-nightly-aarch64-unknown-linux-gnu.tar.gz  # [aarch64]
    url: https://static.rust-lang.org/dist/{{ year }}-{{ month }}-{{ day }}/rust-nightly-powerpc64le-unknown-linux-gnu.tar.gz  # [ppc64le]
    url: https://static.rust-lang.org/dist/{{ year }}-{{ month }}-{{ day }}/rust-nightly-x86_64-apple-darwin.tar.gz  # [osx and x86_64]
    url: https://static.rust-lang.org/dist/{{ year }}-{{ month }}-{{ day }}/rust-nightly-aarch64-apple-darwin.tar.gz  # [osx and arm64]
    url: https://static.rust-lang.org/dist/{{ year }}-{{ month }}-{{ day }}/rust-nightly-x86_64-pc-windows-msvc.tar.gz  # [win64]
    sha256: b4c20aae5604114dcaf0d4a539cd53418f4a455a6d672da1177643df6747ce75  # [win64]
    sha256: 7b7d48b5e76f9d630904ef515b2bb045badb35ebaa2a89cb4d9ce72bbf55381d  # [osx and x86_64]
    sha256: d61df658cbdcd9c4daee096ec2090d802b2d8b248c02a8989780e5caf4b414e4  # [linux and x86_64]
    sha256: 49ada1d6c610fb9064a088f19a3ca7ac7f370a1aa00ad07a2b9ad05cb86ad9f4  # [linux and aarch64]
    sha256: a3f2df216525e91a3576bb71a3e5cf4068c023e8dfe3d70a7bf4f52e955cfc11  # [linux and ppc64le]
    sha256: ac27eb055a000ea8eb145f610f1841b18bd95c96522f83bf4a0eb49fdd48a023  # [osx and arm64]
    patches:
      - 0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff
  - url: https://static.rust-lang.org/dist/{{ year }}-{{ month }}-{{ day }}/rust-src-nightly.tar.gz
    sha256: 67be6c94f62a6c58ca8801aa0378c5644a7edb7967e64fa60ee15bdc03f2cfa9
    folder: rust-src

build:
  number: 0

requirements:
  build:
    - posix  # [build_platform == "win-64"]
  host:

outputs:
  - name: rust-std-{{ rust_arch }}
    build:
      noarch: generic
      binary_relocation: false
      missing_dso_whitelist:   # [linux]
        - /lib64/librt.so.1  # [linux]
        - /lib64/libdl.so.2  # [linux]
        - /lib64/libpthread.so.0  # [linux]
        - /lib64/libm.so.6  # [linux]
        - /lib64/libc.so.6  # [linux]
        - /lib64/ld-linux-x86-64.so.2  # [linux]
      merge_build_host: false
    requirements:
      build:
        - posix  # [build_platform == "win-64"]
      host:
      run:
    script: install-rust-std.sh  # [unix]
    script: install-rust-std.bat  # [win]
    test:
      commands:
        - test -d $PREFIX/lib/rustlib   # [unix]
        - if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1  # [win]
        - echo {{ rust_arch }}

  - name: rust
    script: install-rust.sh  # [unix]
    script: install-rust.bat  # [win]
    build:
      # the distributed binaries are already relocatable
      binary_relocation: false
      missing_dso_whitelist:   # [linux]
        - /lib64/librt.so.1  # [linux]
        - /lib64/libdl.so.2  # [linux]
        - /lib64/libpthread.so.0  # [linux]
        - /lib64/libm.so.6  # [linux]
        - /lib64/libc.so.6  # [linux]
        - /lib64/ld-linux-x86-64.so.2  # [linux]
        # Added as run deps: libgcc-ng (via compiler strong run_exports), zlib
        # - /lib64/libgcc_s.so.1  # [linux]
        # - /lib64/libz.so.1  # [linux]
    run_exports:
      strong_constrains:
        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.9") }}  # [osx and x86_64]
    requirements:
      build:
        - posix  # [build_platform == "win-64"]
      host:
        - {{ pin_subpackage("rust-std-" ~ rust_arch, exact=True) }}
        - {{ compiler('c') }}  # [linux] -- rustc needs a toolchain to link executables
        # zlib is linked by **/lib/libLLVM-*-rust-*.so
        - zlib  # [linux]
      run:
        - {{ pin_subpackage("rust-std-" ~ rust_arch, exact=True) }}
        - gcc_impl_{{ target_platform }}  # [linux]
    test:
      requires:
        - posix  # [build_platform == "win-64"]
      commands:
        - rustc --help
        - rustdoc --help
        - cargo --help
        - cargo install --force xsv
        - rustc --version
        - rustc --version | grep "rustc {{ '.'.join(version.split('.')[:3]) }}"  # [unix]
        - echo {{ rust_arch }}

  - name: rust-src
    script: install-rust-src.sh
    build:
      noarch: generic
      skip: {{ rust_arch != "x86_64-unknown-linux-gnu" }}
    requirements:
      run_constrained:
        # Having different versions of rust-src and rust is confusing.
        # `rust-src` is specific to the toolchain in `rustup`,
        # and we would like to keep that behavior.
        - {{ pin_subpackage("rust", exact=True) }}
    test:
      commands:
        - test -f "${PREFIX}"/lib/rustlib/src/rust/Cargo.lock
        # Make sure that the outputs do not clobber with other rust components
        - test "$(ls "${PREFIX}"/lib/rustlib/)" = "$(printf "manifest-rust-src\nsrc")"

about:
  home: https://www.rust-lang.org
  license: MIT
  license_file:
    - LICENSE-APACHE
    - LICENSE-MIT
  summary: |
    Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.
    This package provides the compiler (rustc) and the documentation utilities rustdoc.
  dev_url: https://doc.rust-lang.org/std/
  doc_url: https://www.rust-lang.org/en-US/documentation.html

extra:
  recipe-maintainers:
    - timkpaine
    - xhochy
    - johanneskoester
    - abhi18av
    - pkgw
    - dlaehnemann
    - isuruf
    - mbargull
